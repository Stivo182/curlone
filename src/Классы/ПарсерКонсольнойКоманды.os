#Использовать tokenizer

Перем АргументыКоманд; // Массив
Перем Спецификация; // Массив
Перем Токенайзер; // Токенайзер
Перем ОткрытаКавычкаСПоддержкойИнтерполяции; // Булево
Перем ОткрытаКавычкаБезПоддержкиИнтерполяции; // Булево
Перем ЭкранироватьСимвол; // Булево
Перем ОтменитьЭкранированиеСимвола; // Булево
Перем НакопленнаяСтрока; // Строка
Перем НачатьНовуюКоманду; // Булево

Процедура ПриСозданииОбъекта()

	Спецификация = Спецификация();

КонецПроцедуры

Функция Распарсить(Команда) Экспорт
	
	АргументыКоманд = Новый Массив;

	ОткрытаКавычкаСПоддержкойИнтерполяции = Ложь;
	ОткрытаКавычкаБезПоддержкиИнтерполяции = Ложь;
	ЭкранироватьСимвол = Ложь;
	ОтменитьЭкранированиеСимвола = Ложь;
	НачатьНовуюКоманду = Ложь;

	ОчиститьНакопительнуюСтроку();

	Токенайзер = Новый Токенайзер(Спецификация);
	Токенайзер.Инит(Команда);

	Пока Токенайзер.ЕстьЕщеТокены() Цикл

		Токен = ПолучитьСледующийТокен();
		РазобратьАргумент(Токен);

	КонецЦикла;

	Возврат АргументыКоманд;

КонецФункции

Функция Спецификация()

	СимволЭкранирования = "\";
	КавычкаСПоддержкойИнтерполяции = """";
	КавычкаБезПоддержкиИнтерполяции = "'";

	Спецификация = Новый Массив();
	Спецификация.Добавить(Новый СпецификацияТокенСимвол(СимволЭкранирования, "СимволЭкранирования"));
	Спецификация.Добавить(Новый СпецификацияТокенСимвол(КавычкаСПоддержкойИнтерполяции, "КавычкаСПоддержкойИнтерполяции"));
	Спецификация.Добавить(Новый СпецификацияТокенСимвол(КавычкаБезПоддержкиИнтерполяции, "КавычкаБезПоддержкиИнтерполяции"));
	Спецификация.Добавить(Новый СпецификацияТокенРегулярноеВыражение(Новый РегулярноеВыражение("^[;&|]+"), "ОператорСвязыванияКоманд"));
	Спецификация.Добавить(Новый СпецификацияТокенСимвол(Символы.ПС, "ПереносСтроки"));
	Спецификация.Добавить(Новый СпецификацияТокенРегулярноеВыражение(Новый РегулярноеВыражение("^\s"), "ПробельныйСимвол"));
	Спецификация.Добавить(Новый СпецификацияТокенРегулярноеВыражение(Новый РегулярноеВыражение("^[^'""\\\s]+"), "СтрокаБезСлужебныхСимволов")); // Строка до символов '"\ и пробельных символов
	
	Возврат Спецификация;

КонецФункции

Процедура РазобратьАргумент(Токен)

	Если НачатьНовуюКоманду Тогда
		Если Не Токен = Неопределено И Токен.ТипТокена() = "ОператорСвязыванияКоманд" Тогда
			Возврат;
		КонецЕсли;
		ДобавитьНовуюКоманду();
	КонецЕсли;

	Если Не Токен = Неопределено Тогда

		Если Не ОткрытаКавычка() И ЭтоРазделительАргументов(Токен) Тогда
			Токен = ПропуститьПробелыИПереносСтроки();
		КонецЕсли;

		Если (Не НачатьНовуюКоманду 
				Или Не Токен.ТипТокена() = "ОператорСвязыванияКоманд")
			И Не Токен.ТипТокена() = "ПереносСтроки" Тогда
			ДополнитьНакопительнуюСтроку(Токен.Значение());	
			ПромотатьЗначениеПараметра();
		КонецЕсли;		

	КонецЕсли;

	Аргумент = ПолучитьНакопительнуюСтроку();

	Если СтрДлина(Аргумент) > 0 Тогда
		ДобавитьАргумент(Аргумент);
	КонецЕсли;

КонецПроцедуры

Функция ПромотатьЗначениеПараметра()

	Если Не Токенайзер.ЕстьЕщеТокены() Тогда
		Возврат Неопределено;
	КонецЕсли;

	Если ОткрытаКавычка() Тогда
		Токен = ПромотатьДоЗакрытияКавычки();	
	Иначе
		Токен = ПромотатьДоОкончанияСлова();
	КонецЕсли;

	Возврат Токен;

КонецФункции

Функция ПромотатьДоОкончанияСлова()
	
	КавычкаБылаОткрыта = ОткрытаКавычка();

	Пока Токенайзер.ЕстьЕщеТокены() Цикл

		Токен = ПолучитьСледующийТокен();
		
		Если КавычкаБылаОткрыта <> ОткрытаКавычка() 
			Или КавычкаБылаОткрыта
			Или Не Токен.ТипТокена() = "СтрокаБезСлужебныхСимволов" Тогда
			Возврат Токен;
		КонецЕсли;

		ДополнитьНакопительнуюСтроку(Токен.Значение());

	КонецЦикла;

КонецФункции

Функция ПромотатьДоЗакрытияКавычки()

	Если Не ОткрытаКавычка() Тогда
		Возврат Неопределено;
	КонецЕсли;

	Пока Токенайзер.ЕстьЕщеТокены() Цикл

		Токен = ПолучитьСледующийТокен();
		Если Не ОткрытаКавычка() Тогда
			Возврат Токен;
		КонецЕсли;

		ДополнитьНакопительнуюСтроку(Токен.Значение());
		
	КонецЦикла;

КонецФункции

Функция ПропуститьПробелыИПереносСтроки()

	Пока Токенайзер.ЕстьЕщеТокены() Цикл

		Токен = ПолучитьСледующийТокен();
		Если Не Токен.ТипТокена() = "ПробельныйСимвол" Тогда
			Возврат Токен;
		КонецЕсли;

	КонецЦикла;

КонецФункции

Функция ЭтоРазделительАргументов(Токен)
	
	ПервыйСимвол = Лев(Токен.Значение(), 1);

	Возврат Не ОткрытаКавычка()
		И Не ЭкранироватьСимвол
		И ЭтоПробельныйСимвол(ПервыйСимвол);

КонецФункции

Функция ПолучитьСледующийТокен()

	Токен = Токенайзер.СледующийТокен();

	Если Токен = Неопределено Тогда
		Возврат Токен;
	КонецЕсли;

	ОтменитьЭкранированиеПриНеобходимости(Токен);

	Если Токен.ТипТокена() = "ПереносСтроки" Тогда
		Если Не ЭкранироватьСимвол Тогда
			НачатьНовуюКоманду = Истина;
		КонецЕсли;
		Возврат Токен;
	КонецЕсли;

	Если Токен.ТипТокена() = "ОператорСвязыванияКоманд" Тогда
		Если Не ЭкранироватьСимвол И Не ОткрытаКавычка() Тогда
			НачатьНовуюКоманду = Истина;
		КонецЕсли;
		Возврат Токен;
	КонецЕсли;
	
	Если Токен.ТипТокена() = "СимволЭкранирования" Тогда
		Если Не (ОткрытаКавычкаБезПоддержкиИнтерполяции Или ЭкранироватьСимвол) Тогда
			ЭкранироватьСимвол = Истина;
			Возврат ПолучитьСледующийТокен();
		КонецЕсли;
	КонецЕсли;

	Если Токен.ТипТокена() = "КавычкаБезПоддержкиИнтерполяции" И Не ОткрытаКавычкаСПоддержкойИнтерполяции Тогда
		Если Не ЭкранироватьСимвол Тогда
			ОткрытаКавычкаБезПоддержкиИнтерполяции = Не ОткрытаКавычкаБезПоддержкиИнтерполяции;
			Возврат ПолучитьСледующийТокен();
		КонецЕсли;
	КонецЕсли;

	Если Токен.ТипТокена() = "КавычкаСПоддержкойИнтерполяции" И Не ОткрытаКавычкаБезПоддержкиИнтерполяции Тогда
		Если Не ЭкранироватьСимвол Тогда
			ОткрытаКавычкаСПоддержкойИнтерполяции = Не ОткрытаКавычкаСПоддержкойИнтерполяции;
			Возврат ПолучитьСледующийТокен();
		КонецЕсли;
	КонецЕсли;
	
	Возврат Токен;

КонецФункции

Процедура ОтменитьЭкранированиеПриНеобходимости(Токен)

	Если ОтменитьЭкранированиеСимвола Тогда
		ОтменитьЭкранированиеСимвола = Ложь;
		ЭкранироватьСимвол = Ложь;
	КонецЕсли;

	Если ЭкранироватьСимвол И Не Токен.ТипТокена() = "СимволЭкранирования" Тогда
		ОтменитьЭкранированиеСимвола = Истина;
	КонецЕсли;

КонецПроцедуры

Процедура ДополнитьНакопительнуюСтроку(Значение)
	НакопленнаяСтрока = НакопленнаяСтрока + Значение;
КонецПроцедуры

Процедура ДобавитьАргумент(Значение)
	Если АргументыКоманд.Количество() = 0 Тогда
		ДобавитьНовуюКоманду();
	КонецЕсли;
	АргументыКоманд[АргументыКоманд.ВГраница()].Добавить(Значение);
КонецПроцедуры

Процедура ДобавитьНовуюКоманду()
	НачатьНовуюКоманду = Ложь;

	Если АргументыКоманд.Количество() > 0 Тогда
		ПоследнийМассив = АргументыКоманд[АргументыКоманд.ВГраница()];
		Если ПоследнийМассив.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;

	АргументыКоманд.Добавить(Новый Массив());
КонецПроцедуры

Процедура ОчиститьНакопительнуюСтроку()
	НакопленнаяСтрока = "";
КонецПроцедуры

Функция ПолучитьНакопительнуюСтроку()
	Результат = НакопленнаяСтрока;
	ОчиститьНакопительнуюСтроку();

	Возврат Результат;
КонецФункции

Функция ОткрытаКавычка()
	Возврат ОткрытаКавычкаБезПоддержкиИнтерполяции Или ОткрытаКавычкаСПоддержкойИнтерполяции;
КонецФункции

Функция ЭтоПробельныйСимвол(Символ)
	Возврат СтрДлина(Символ) = 1 И ПустаяСтрока(СокрЛП(Символ));
КонецФункции