#Использовать "../internal"

Перем Результат;
Перем ОписаниеЗапроса;

Перем ИмяПараметраЗаголовки; 
Перем ИмяПараметраHTTPСоединение;
Перем ИмяПараметраЗащищенноеСоединение;
Перем ИмяПараметраHTTPЗапрос;
Перем ИмяПараметраHTTPОтвет;

Процедура ПриСозданииОбъекта()

	ИмяПараметраЗаголовки = "Заголовки";
	ИмяПараметраHTTPСоединение = "Соединение";
	ИмяПараметраЗащищенноеСоединение = "ЗащищенноеСоединение";
	ИмяПараметраHTTPЗапрос = "HTTPЗапрос";
	ИмяПараметраHTTPОтвет = "HTTPОтвет";

КонецПроцедуры

Функция Получить(пОписаниеЗапроса) Экспорт

	ОписаниеЗапроса = пОписаниеЗапроса;

	Результат = "";

	Для Каждого URL Из ОписаниеЗапроса.URL Цикл
		
		СтруктураURL = Новый ПарсерURL(URL);
	
		ВывестиЗаголовки();
		ВывестиПустуюСтроку();

		ВывестиЗащищенноеСоединение(СтруктураURL);
		ВывестиHTTPСоединение(СтруктураURL);
		ВывестиПустуюСтроку();

		ВывестиHTTPЗапрос(СтруктураURL);
		ВывестиВызовHTTPМетода();

	КонецЦикла;

	Возврат СокрЛП(Результат);

КонецФункции

Функция ПолучитьПорт(СтруктураURL)

	Порт = СтруктураURL.Порт;
	Если Не ЗначениеЗаполнено(Порт) Тогда
		Если СтруктураURL.Схема = "https" Тогда
			Порт = 443;
		Иначе
			Порт = 80;
		КонецЕсли;
	КонецЕсли;

	Возврат Формат(Порт, "ЧГ=");

КонецФункции

Процедура ВывестиЗащищенноеСоединение(СтруктураURL)

	Если СтруктураURL.Схема = "https" Тогда
		ВывестиСтроку(ИмяПараметраЗащищенноеСоединение + " = Новый ЗащищенноеСоединениеOpenSSL();");
	КонецЕсли;

КонецПроцедуры

Процедура ВывестиHTTPСоединение(СтруктураURL)

	ПараметрыФункции = Новый Массив;
	ПараметрыФункции.Добавить(ОбернутьКавычками(СтруктураURL.Сервер));
	ПараметрыФункции.Добавить(ПолучитьПорт(СтруктураURL));
	ПараметрыФункции.Добавить(""); // Пользователь
	ПараметрыФункции.Добавить(""); // Пароль
	ПараметрыФункции.Добавить(""); // Прокси
	ПараметрыФункции.Добавить(""); // Таймаут
	ПараметрыФункции.Добавить(ИмяПараметраЗащищенноеСоединение);

	ВывестиСтроку(СтрШаблон(ИмяПараметраHTTPСоединение + " = Новый HTTPСоединение(%1);", 
		ПараметрыФункцииВСтроку(ПараметрыФункции, Истина)));

КонецПроцедуры

Процедура ВывестиЗаголовки()

	Если ОписаниеЗапроса.Заголовки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	ВывестиСтроку(ИмяПараметраЗаголовки + " = Новый Соответствие();");

	Для Каждого Заголовок Из ОписаниеЗапроса.Заголовки Цикл
		СтрокаЗаголовка = СтрШаблон("%1.Вставить(""%2"", ""%3"");", 
			ИмяПараметраЗаголовки, 
			Заголовок.Ключ, 
			ЭкранироватьКавычки(Заголовок.Значение));
		ВывестиСтроку(СтрокаЗаголовка);
	КонецЦикла;

КонецПроцедуры

Процедура ВывестиHTTPЗапрос(СтруктураURL)

	ПараметрыФункции = Новый Массив;
	ПараметрыФункции.Добавить(ОбернутьКавычками(СтруктураURL.ПутьСПараметрами));

	Если ОписаниеЗапроса.Заголовки.Количество() Тогда
		ПараметрыФункции.Добавить(ИмяПараметраЗаголовки);
	КонецЕсли;

	ВывестиСтроку(СтрШаблон(ИмяПараметраHTTPЗапрос + " = Новый HTTPЗапрос(%1);", ПараметрыФункцииВСтроку(ПараметрыФункции)));

КонецПроцедуры

Процедура ВывестиВызовHTTPМетода()

	ИмяВыходногоФайла = "";

	ПараметрыФункции = Новый Массив;
	ПараметрыФункции.Добавить(ОбернутьКавычками(ОписаниеЗапроса.Метод));
	ПараметрыФункции.Добавить(ИмяПараметраHTTPЗапрос);

	Если ЗначениеЗаполнено(ИмяВыходногоФайла) Тогда
		ПараметрыФункции.Добавить(ИмяВыходногоФайла);
	КонецЕсли;

	ВывестиСтроку(СтрШаблон("%1 = %2.ВызватьHTTPМетод(%3);", 
		ИмяПараметраHTTPОтвет,
		ИмяПараметраHTTPСоединение,
		ПараметрыФункцииВСтроку(ПараметрыФункции)));

КонецПроцедуры

Процедура ВывестиСтроку(Строка)
	Результат = Результат + Строка + Символы.ПС;
КонецПроцедуры

Процедура ВывестиПустуюСтроку()
	Результат = Результат + Символы.ПС;
КонецПроцедуры

Функция ПараметрыФункцииВСтроку(ПараметрыФункции, ПереноситьКаждыйПараметр = Ложь)
	
	Если ПереноситьКаждыйПараметр Тогда
		Разделитель = "," + Символы.ПС + Символы.Таб;
	Иначе
		Разделитель = ", ";
	КонецЕсли;

	Возврат СокрЛП(СтрСоединить(ПараметрыФункции, Разделитель));

КонецФункции

Функция ОбернутьКавычками(Значение)
	Возврат СтрШаблон("""%1""", ЭкранироватьКавычки(Значение))
КонецФункции

Функция ЭкранироватьКавычки(Строка)
	Возврат СтрЗаменить(Строка, """", """""");
КонецФункции