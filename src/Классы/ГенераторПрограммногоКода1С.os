#Использовать "../internal"

Перем Результат;
Перем ОписаниеЗапроса;

Перем ИмяПараметраЗаголовки; 
Перем ИмяПараметраHTTPСоединение;
Перем ИмяПараметраЗащищенноеСоединение;
Перем ИмяПараметраHTTPЗапрос;
Перем ИмяПараметраHTTPОтвет;

Процедура ПриСозданииОбъекта()

	ИмяПараметраЗаголовки = "Заголовки";
	ИмяПараметраHTTPСоединение = "Соединение";
	ИмяПараметраЗащищенноеСоединение = "ЗащищенноеСоединение";
	ИмяПараметраHTTPЗапрос = "HTTPЗапрос";
	ИмяПараметраHTTPОтвет = "HTTPОтвет";

КонецПроцедуры

Функция Получить(пОписаниеЗапроса) Экспорт

	ОписаниеЗапроса = пОписаниеЗапроса;

	Результат = "";

	Для Каждого URL Из ОписаниеЗапроса.URL Цикл
		
		СтруктураURL = Новый ПарсерURL(URL);
	
		ВывестиЗаголовки();
		ВывестиПустуюСтроку();

		ВывестиЗащищенноеСоединение(СтруктураURL);
		ВывестиHTTPСоединение(СтруктураURL);
		ВывестиПустуюСтроку();

		ВывестиHTTPЗапрос(СтруктураURL);
		ВывестиУстановкуТелаЗапросаТекстовымиДанными();
		ВывестиУстановкуТелаЗапросаДвоичнымиДанными();
		ВывестиВызовHTTPМетода();

	КонецЦикла;

	Возврат СокрЛП(Результат);

КонецФункции

Функция ПолучитьПорт(СтруктураURL)

	Порт = СтруктураURL.Порт;
	Если Не ЗначениеЗаполнено(Порт) Тогда
		Если СтруктураURL.Схема = "https" Тогда
			Порт = 443;
		Иначе
			Порт = 80;
		КонецЕсли;
	КонецЕсли;

	Возврат Формат(Порт, "ЧГ=");

КонецФункции

Процедура ВывестиЗащищенноеСоединение(СтруктураURL)

	Если СтруктураURL.Схема = "https" Тогда
		ВывестиСтроку(ИмяПараметраЗащищенноеСоединение + " = Новый ЗащищенноеСоединениеOpenSSL();");
	КонецЕсли;

КонецПроцедуры

Процедура ВывестиHTTPСоединение(СтруктураURL)

	ПараметрыФункции = Новый Массив;
	ПараметрыФункции.Добавить(ОбернутьКавычками(СтруктураURL.Сервер));
	ПараметрыФункции.Добавить(ПолучитьПорт(СтруктураURL));
	ПараметрыФункции.Добавить(ОбернутьКавычками(ОписаниеЗапроса.ИмяПользователя, Истина));
	ПараметрыФункции.Добавить(ОбернутьКавычками(ОписаниеЗапроса.ПарольПользователя, Истина));
	ПараметрыФункции.Добавить(""); // Прокси
	ПараметрыФункции.Добавить(""); // Таймаут
	ПараметрыФункции.Добавить(ИмяПараметраЗащищенноеСоединение);

	ВывестиСтроку(СтрШаблон(ИмяПараметраHTTPСоединение + " = Новый HTTPСоединение(%1);", 
		ПараметрыФункцииВСтроку(ПараметрыФункции, Истина)));

КонецПроцедуры

Процедура ВывестиЗаголовки()

	Если ОписаниеЗапроса.Заголовки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	ВывестиСтроку(ИмяПараметраЗаголовки + " = Новый Соответствие();");

	Для Каждого Заголовок Из ОписаниеЗапроса.Заголовки Цикл
		СтрокаЗаголовка = СтрШаблон("%1.Вставить(""%2"", ""%3"");", 
			ИмяПараметраЗаголовки, 
			Заголовок.Ключ, 
			ЭкранироватьКавычки(Заголовок.Значение));
		ВывестиСтроку(СтрокаЗаголовка);
	КонецЦикла;

КонецПроцедуры

Процедура ВывестиHTTPЗапрос(СтруктураURL)

	ПараметрыФункции = Новый Массив;
	ПараметрыФункции.Добавить(ОбернутьКавычками(СтруктураURL.ПутьСПараметрами));

	Если ОписаниеЗапроса.Заголовки.Количество() Тогда
		ПараметрыФункции.Добавить(ИмяПараметраЗаголовки);
	КонецЕсли;

	ВывестиСтроку(СтрШаблон(ИмяПараметраHTTPЗапрос + " = Новый HTTPЗапрос(%1);", ПараметрыФункцииВСтроку(ПараметрыФункции)));

КонецПроцедуры

Процедура ВывестиУстановкуТелаЗапросаТекстовымиДанными()

	ТекстовыеДанныеДляВывода = Новый Массив;

	// Подготовка текстовых данных переданные строкой
	ОтправляемаяСтрока = СтрСоединить(ОписаниеЗапроса.ОтправляемыеТекстовыеДанные, "&");
	Если ЗначениеЗаполнено(ОтправляемаяСтрока) Тогда
		ТекстовыеДанныеДляВывода.Добавить(ОбернутьКавычками(ОтправляемаяСтрока));
	КонецЕсли;

	// Подготовка и вывод установки текстовых данных переданные файлом
	НомерФайла = 1;
	Для Каждого ПутьКФайлу Из ОписаниеЗапроса.ОтправляемыеТекстовыеДанныеИзФайла Цикл
		ИмяПараметра = "ТекстовыеДанныеИзФайла_" + Формат(НомерФайла, "ЧГ=");

		ВывестиПустуюСтроку();
		ВывестиСтроку(СтрШаблон(
			"ТекстовыйДокумент = Новый ТекстовыйДокумент();
			|ТекстовыйДокумент.Прочитать(%2);
			|%1 = ТекстовыйДокумент.ПолучитьТекст();
			|%1 = СтрЗаменить(%1, Символы.ПС, """");
			|%1 = СтрЗаменить(%1, Символы.ВК, """");", ИмяПараметра, ОбернутьКавычками(ПутьКФайлу)));
	
		ТекстовыеДанныеДляВывода.Добавить(ИмяПараметра);

		НомерФайла = НомерФайла + 1;
	КонецЦикла;


	// Вывод установки тела из строки
	КоличествоЭлементов = ТекстовыеДанныеДляВывода.Количество();
	Если КоличествоЭлементов = 0 Тогда
		Возврат;
	КонецЕсли;

	Если КоличествоЭлементов = 1 Тогда
		ВывестиСтроку(СтрШаблон("%1.УстановитьТелоИзСтроки(%2);", ИмяПараметраHTTPЗапрос, ТекстовыеДанныеДляВывода[0]));
	Иначе
		Разделитель = "
		|	+ ""&"" + ";

		ВывестиПустуюСтроку();
		ВывестиСтроку(СтрШаблон("ТелоЗапроса = %1;", СтрСоединить(ТекстовыеДанныеДляВывода, Разделитель)));
		ВывестиПустуюСтроку();
		ВывестиСтроку(СтрШаблон("%1.УстановитьТелоИзСтроки(ТелоЗапроса);", ИмяПараметраHTTPЗапрос));
	КонецЕсли;

КонецПроцедуры

Процедура ВывестиУстановкуТелаЗапросаДвоичнымиДанными()

	ЭтоПервыйФайл = Истина;
	Для Каждого ПутьКФайлу Из ОписаниеЗапроса.ОтправляемыеДвоичныеДанныеИзФайла Цикл
		ВывестиСтроку(СтрШаблон("%1%2.УстановитьИмяФайлаТела(%3);", 
			?(ЭтоПервыйФайл, "", "// "),
			ИмяПараметраHTTPЗапрос, 
			ОбернутьКавычками(ПутьКФайлу)));
		ЭтоПервыйФайл = Ложь;
	КонецЦикла;

КонецПроцедуры

Процедура ВывестиВызовHTTPМетода()

	ИмяВыходногоФайла = "";

	ПараметрыФункции = Новый Массив;
	ПараметрыФункции.Добавить(ОбернутьКавычками(ОписаниеЗапроса.Метод));
	ПараметрыФункции.Добавить(ИмяПараметраHTTPЗапрос);

	Если ЗначениеЗаполнено(ИмяВыходногоФайла) Тогда
		ПараметрыФункции.Добавить(ИмяВыходногоФайла);
	КонецЕсли;

	ВывестиСтроку(СтрШаблон("%1 = %2.ВызватьHTTPМетод(%3);", 
		ИмяПараметраHTTPОтвет,
		ИмяПараметраHTTPСоединение,
		ПараметрыФункцииВСтроку(ПараметрыФункции)));

КонецПроцедуры

Процедура ВывестиСтроку(Строка)
	Результат = Результат + Символы.ПС + Строка;
КонецПроцедуры

Процедура ВывестиПустуюСтроку()
	Результат = Результат + Символы.ПС;
КонецПроцедуры

Функция ПараметрыФункцииВСтроку(ПараметрыФункции, ПереноситьКаждыйПараметр = Ложь)
	
	Если ПереноситьКаждыйПараметр Тогда
		Разделитель = "," + Символы.ПС + Символы.Таб;
	Иначе
		Разделитель = ", ";
	КонецЕсли;

	Возврат СокрЛП(СтрСоединить(ПараметрыФункции, Разделитель));

КонецФункции

Функция ОбернутьКавычками(Значение, ОборачиватьТолькоЗаполненные = Ложь)
	Если ЗначениеЗаполнено(Значение) Или Не ОборачиватьТолькоЗаполненные Тогда
		Возврат СтрШаблон("""%1""", ЭкранироватьКавычки(Значение));
	КонецЕсли;
	Возврат "";
КонецФункции

Функция ЭкранироватьКавычки(Строка)
	Возврат СтрЗаменить(Строка, """", """""");
КонецФункции