#Использовать "../internal"

Перем Результат;
Перем ОписаниеЗапроса;

Перем ИмяПараметраЗаголовки; 
Перем ИмяПараметраHTTPСоединение;
Перем ИмяПараметраЗащищенноеСоединение;
Перем ИмяПараметраHTTPЗапрос;
Перем ИмяПараметраHTTPОтвет;

Перем ИменаПеременныхОтправляемыхТекстовыхДанныхИзФайла;

Процедура ПриСозданииОбъекта()

	ИмяПараметраЗаголовки = "Заголовки";
	ИмяПараметраHTTPСоединение = "Соединение";
	ИмяПараметраЗащищенноеСоединение = "ЗащищенноеСоединение";
	ИмяПараметраHTTPЗапрос = "HTTPЗапрос";
	ИмяПараметраHTTPОтвет = "HTTPОтвет";

	ИменаПеременныхОтправляемыхТекстовыхДанныхИзФайла = Новый Массив;

КонецПроцедуры

Функция Получить(пОписаниеЗапроса) Экспорт

	ОписаниеЗапроса = пОписаниеЗапроса;

	Результат = "";

	Для Каждого URL Из ОписаниеЗапроса.URL Цикл
		
		СтруктураURL = Новый ПарсерURL(URL);
	
		ВывестиЗаголовки();
		ВывестиПустуюСтроку();

		ВывестиЗащищенноеСоединение(СтруктураURL);
		ВывестиHTTPСоединение(СтруктураURL);
		ВывестиИнициализациюОтправляемыхТекстовыхДанныхИзФайла();
		ВывестиHTTPЗапрос(СтруктураURL);
		ВывестиУстановкуТелаЗапросаТекстовымиДанными();
		ВывестиУстановкуТелаЗапросаДвоичнымиДанными();
		ВывестиВызовHTTPМетода();

	КонецЦикла;

	Возврат СокрЛП(Результат);

КонецФункции

Функция ПолучитьПорт(СтруктураURL)

	Порт = СтруктураURL.Порт;
	Если Не ЗначениеЗаполнено(Порт) Тогда
		Если СтруктураURL.Схема = "https" Тогда
			Порт = 443;
		Иначе
			Порт = 80;
		КонецЕсли;
	КонецЕсли;

	Возврат Формат(Порт, "ЧГ=");

КонецФункции

Процедура ВывестиЗащищенноеСоединение(СтруктураURL)

	Если СтруктураURL.Схема = "https" Тогда
		ВывестиСтроку(ИмяПараметраЗащищенноеСоединение + " = Новый ЗащищенноеСоединениеOpenSSL();");
	КонецЕсли;

КонецПроцедуры

Процедура ВывестиHTTPСоединение(СтруктураURL)

	ПараметрыФункции = Новый Массив;
	ПараметрыФункции.Добавить(ОбернутьКавычками(СтруктураURL.Сервер));
	ПараметрыФункции.Добавить(ПолучитьПорт(СтруктураURL));
	ПараметрыФункции.Добавить(ОбернутьКавычками(ОписаниеЗапроса.ИмяПользователя, Истина));
	ПараметрыФункции.Добавить(ОбернутьКавычками(ОписаниеЗапроса.ПарольПользователя, Истина));
	ПараметрыФункции.Добавить(""); // Прокси
	ПараметрыФункции.Добавить(""); // Таймаут
	ПараметрыФункции.Добавить(ИмяПараметраЗащищенноеСоединение);

	ВывестиСтроку(СтрШаблон(ИмяПараметраHTTPСоединение + " = Новый HTTPСоединение(%1);", 
		ПараметрыФункцииВСтроку(ПараметрыФункции, Истина)));

КонецПроцедуры

Процедура ВывестиЗаголовки()

	Если ОписаниеЗапроса.Заголовки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	ВывестиСтроку(ИмяПараметраЗаголовки + " = Новый Соответствие();");

	Для Каждого Заголовок Из ОписаниеЗапроса.Заголовки Цикл
		СтрокаЗаголовка = СтрШаблон("%1.Вставить(""%2"", ""%3"");", 
			ИмяПараметраЗаголовки, 
			Заголовок.Ключ, 
			ЭкранироватьКавычки(Заголовок.Значение));
		ВывестиСтроку(СтрокаЗаголовка);
	КонецЦикла;

КонецПроцедуры

Процедура ВывестиИнициализациюОтправляемыхТекстовыхДанныхИзФайла()

	ИменаПеременныхОтправляемыхТекстовыхДанныхИзФайла.Очистить();

	Если ОписаниеЗапроса.ПередаватьОтправляемыеДанныеВСтрокуЗапроса Тогда 
		МассивФайлов = Новый Массив;
		ОбщегоНазначения.ДополнитьМассив(МассивФайлов, ОписаниеЗапроса.ОтправляемыеТекстовыеДанныеИзФайла);
		ОбщегоНазначения.ДополнитьМассив(МассивФайлов, ОписаниеЗапроса.ОтправляемыеДвоичныеДанныеИзФайла);
	Иначе
		МассивФайлов = ОписаниеЗапроса.ОтправляемыеТекстовыеДанныеИзФайла;
	КонецЕсли;

	НомерФайла = 1;
	Для Каждого ПутьКФайлу Из МассивФайлов Цикл
		ИмяПараметра = "ТекстовыеДанныеИзФайла_" + Формат(НомерФайла, "ЧГ=");

		ВывестиПустуюСтроку();

		ВывестиСтроку(СтрШаблон(
			"ТекстовыйДокумент = Новый ТекстовыйДокумент();
			|ТекстовыйДокумент.Прочитать(%2);
			|%1 = ТекстовыйДокумент.ПолучитьТекст();
			|%1 = СтрЗаменить(%1, Символы.ПС, """");
			|%1 = СтрЗаменить(%1, Символы.ВК, """");", ИмяПараметра, ОбернутьКавычками(ПутьКФайлу)));
	
		ИменаПеременныхОтправляемыхТекстовыхДанныхИзФайла.Добавить(ИмяПараметра);

		НомерФайла = НомерФайла + 1;
	КонецЦикла;

КонецПроцедуры

Процедура ВывестиHTTPЗапрос(СтруктураURL)

	ПараметрыФункции = Новый Массив;
	
	АдресРесурсаКод = ПолучитьКодДляВыводаАдресаРесурса(СтруктураURL);
	Если СтрЧислоСтрок(АдресРесурсаКод) > 1 Тогда
		ВывестиПустуюСтроку();
		ВывестиСтроку(СтрШаблон("АдресРесурса = %1;", АдресРесурсаКод));
		ПараметрыФункции.Добавить("АдресРесурса");
	Иначе
		ПараметрыФункции.Добавить(АдресРесурсаКод);
	КонецЕсли;

	Если ОписаниеЗапроса.Заголовки.Количество() Тогда
		ПараметрыФункции.Добавить(ИмяПараметраЗаголовки);
	КонецЕсли;

	ВывестиПустуюСтроку();
	ВывестиСтроку(СтрШаблон(ИмяПараметраHTTPЗапрос + " = Новый HTTPЗапрос(%1);", ПараметрыФункцииВСтроку(ПараметрыФункции)));

КонецПроцедуры

Функция ПолучитьКодДляВыводаАдресаРесурса(СтруктураURL)

	Кавычка = """";
	КавычкаЗакрыта = Ложь;
	Код = Кавычка + СтруктураURL.Путь;
	
	СтрокаЗапроса = СобратьИсходнуюСтрокуЗапроса(СтруктураURL);
	Если ОписаниеЗапроса.ПередаватьОтправляемыеДанныеВСтрокуЗапроса Тогда
		ОтправляемаяСтрока = СтрСоединить(ОписаниеЗапроса.ОтправляемыеТекстовыеДанные, "&");

		Если ЗначениеЗаполнено(ОтправляемаяСтрока) Тогда
			СтрокаЗапроса = СтрокаЗапроса 
				+ ?(ЗначениеЗаполнено(СтрокаЗапроса), "&", "")
				+ ОтправляемаяСтрока;
		КонецЕсли;
	КонецЕсли;

	Если ЗначениеЗаполнено(СтрокаЗапроса) Тогда
		Код = Код + "?" + СтрокаЗапроса;
	КонецЕсли;

	Если ОписаниеЗапроса.ПередаватьОтправляемыеДанныеВСтрокуЗапроса
		И ИменаПеременныхОтправляемыхТекстовыхДанныхИзФайла.Количество() Тогда

		Разделитель = "
		|	+ ""&"" + ";
		
		Если Не ЗначениеЗаполнено(СтрокаЗапроса) Тогда
			Код = Код + "?";
		Иначе
			Код = Код + Кавычка + Разделитель;
		КонецЕсли;

		Код = Код + СтрСоединить(ИменаПеременныхОтправляемыхТекстовыхДанныхИзФайла, Разделитель);
		КавычкаЗакрыта = Истина;
	КонецЕсли;

	Если ЗначениеЗаполнено(СтруктураURL.Фрагмент) Тогда
		Фрагмент = "#" + СтруктураURL.Фрагмент;
		Если КавычкаЗакрыта Тогда
			Код = Код + " 
			|	+ " + ОбернутьКавычками(Фрагмент);
		Иначе
			Код = Код + Фрагмент;
		КонецЕсли;
	КонецЕсли;

	Если Не КавычкаЗакрыта Тогда
		Код = Код + Кавычка;
	КонецЕсли;

	Возврат Код;

КонецФункции

Процедура ВывестиУстановкуТелаЗапросаТекстовымиДанными()

	Если ОписаниеЗапроса.ПередаватьОтправляемыеДанныеВСтрокуЗапроса Тогда
		Возврат;
	КонецЕсли;

	ЭлементыТелаЗапросаДляВывода = Новый Массив;

	ОтправляемаяСтрока = СтрСоединить(ОписаниеЗапроса.ОтправляемыеТекстовыеДанные, "&");
	Если ЗначениеЗаполнено(ОтправляемаяСтрока) Тогда
		ЭлементыТелаЗапросаДляВывода.Добавить(ОбернутьКавычками(ОтправляемаяСтрока));
	КонецЕсли;

	ОбщегоНазначения.ДополнитьМассив(ЭлементыТелаЗапросаДляВывода, ИменаПеременныхОтправляемыхТекстовыхДанныхИзФайла);

	КоличествоЭлементов = ЭлементыТелаЗапросаДляВывода.Количество();
	Если КоличествоЭлементов = 1 Тогда
		ВывестиСтроку(СтрШаблон("%1.УстановитьТелоИзСтроки(%2);",
			ИмяПараметраHTTPЗапрос,
			ЭлементыТелаЗапросаДляВывода[0]));
	ИначеЕсли КоличествоЭлементов > 1 Тогда
		Разделитель = "
		|	+ ""&"" + ";

		ВывестиПустуюСтроку();
		ВывестиСтроку(СтрШаблон("ТелоЗапроса = %1;", СтрСоединить(ЭлементыТелаЗапросаДляВывода, Разделитель)));
		ВывестиПустуюСтроку();
		ВывестиСтроку(СтрШаблон("%1.УстановитьТелоИзСтроки(ТелоЗапроса);", ИмяПараметраHTTPЗапрос));
	КонецЕсли;

КонецПроцедуры

Процедура ВывестиУстановкуТелаЗапросаДвоичнымиДанными()

	Если ОписаниеЗапроса.ПередаватьОтправляемыеДанныеВСтрокуЗапроса Тогда
		Возврат;
	КонецЕсли;

	ЭтоПервыйФайл = Истина;
	Для Каждого ПутьКФайлу Из ОписаниеЗапроса.ОтправляемыеДвоичныеДанныеИзФайла Цикл
		ВывестиСтроку(СтрШаблон("%1%2.УстановитьИмяФайлаТела(%3);", 
			?(ЭтоПервыйФайл, "", "// "),
			ИмяПараметраHTTPЗапрос, 
			ОбернутьКавычками(ПутьКФайлу)));
		ЭтоПервыйФайл = Ложь;
	КонецЦикла;

КонецПроцедуры

Процедура ВывестиВызовHTTPМетода()

	ИмяВыходногоФайла = "";

	ПараметрыФункции = Новый Массив;
	ПараметрыФункции.Добавить(ОбернутьКавычками(ОписаниеЗапроса.Метод));
	ПараметрыФункции.Добавить(ИмяПараметраHTTPЗапрос);

	Если ЗначениеЗаполнено(ИмяВыходногоФайла) Тогда
		ПараметрыФункции.Добавить(ИмяВыходногоФайла);
	КонецЕсли;

	ВывестиСтроку(СтрШаблон("%1 = %2.ВызватьHTTPМетод(%3);", 
		ИмяПараметраHTTPОтвет,
		ИмяПараметраHTTPСоединение,
		ПараметрыФункцииВСтроку(ПараметрыФункции)));

КонецПроцедуры

Функция СобратьИсходнуюСтрокуЗапроса(СтруктураURL)

	СтрокаЗапроса = "";

	Для Каждого Параметр Из СтруктураURL.ПараметрыЗапроса Цикл
		СтрокаЗапроса = СтрокаЗапроса 
			+ ?(СтрокаЗапроса = "", "", "&")
			+ Параметр.Ключ
			+ "="
			+ КодироватьСтроку(Параметр.Значение, СпособКодированияСтроки.URLВКодировкеURL);
	КонецЦикла;

	Возврат СтрокаЗапроса;

КонецФункции

Процедура ВывестиСтроку(Строка)
	Результат = Результат + Символы.ПС + Строка;
КонецПроцедуры

Процедура ВывестиПустуюСтроку()
	Результат = Результат + Символы.ПС;
КонецПроцедуры

Функция ПараметрыФункцииВСтроку(ПараметрыФункции, ПереноситьКаждыйПараметр = Ложь)
	
	Если ПереноситьКаждыйПараметр Тогда
		Разделитель = "," + Символы.ПС + Символы.Таб;
	Иначе
		Разделитель = ", ";
	КонецЕсли;

	Возврат СокрЛП(СтрСоединить(ПараметрыФункции, Разделитель));

КонецФункции

Функция ОбернутьКавычками(Значение, ОборачиватьТолькоЗаполненные = Ложь)
	Если ЗначениеЗаполнено(Значение) Или Не ОборачиватьТолькоЗаполненные Тогда
		Возврат СтрШаблон("""%1""", ЭкранироватьКавычки(Значение));
	КонецЕсли;
	Возврат "";
КонецФункции

Функция ЭкранироватьКавычки(Строка)
	Возврат СтрЗаменить(Строка, """", """""");
КонецФункции