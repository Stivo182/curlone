#Использовать "../internal"

Перем Результат;
Перем МассивURL;
Перем Заголовки;
Перем Метод;

Процедура ПриСозданииОбъекта()

	Результат = "";
	МассивURL = Новый Массив;
	Заголовки = Новый Соответствие();
	Метод = "GET";

КонецПроцедуры

Функция Собрать() Экспорт

	Результат = "";

	Для Каждого URL Из МассивURL Цикл

		ВывестиHTTPЗапрос(URL);

	КонецЦикла;

	Возврат СокрЛП(Результат);

КонецФункции

Функция ДобавитьURL(URL) Экспорт
	МассивURL.Добавить(URL);
КонецФункции

Функция УстановитьМетод(пМетод) Экспорт
	Метод = пМетод;
КонецФункции

Функция УстановитьЗаголовки(пЗаголовки) Экспорт
	Заголовки = пЗаголовки;
КонецФункции

Функция ПолучитьПорт(СтруктураURL)

	Порт = СтруктураURL.Порт;
	Если Не ЗначениеЗаполнено(Порт) Тогда
		Если СтруктураURL.Схема = "https" Тогда
			Порт = 443;
		Иначе
			Порт = 80;
		КонецЕсли;
	КонецЕсли;

	Возврат Формат(Порт, "ЧГ=");

КонецФункции

Функция ВывестиHTTPСоединение(СтруктураURL)

	ИмяПараметра = "Соединение";
	ИмяПараметраЗащищенноеСоединение = ВывестиЗащищенноеСоединение(СтруктураURL);

	ПараметрыФункции = Новый Массив;
	ПараметрыФункции.Добавить(ОбернутьКавычками(СтруктураURL.Сервер));
	ПараметрыФункции.Добавить(ПолучитьПорт(СтруктураURL));
	ПараметрыФункции.Добавить(""); // Пользователь
	ПараметрыФункции.Добавить(""); // Пароль
	ПараметрыФункции.Добавить(""); // Прокси
	ПараметрыФункции.Добавить(""); // Таймаут
	ПараметрыФункции.Добавить(ИмяПараметраЗащищенноеСоединение);

	ВывестиСтроку(СтрШаблон(ИмяПараметра + " = Новый HTTPСоединение(%1);", ПараметрыФункцииВСтроку(ПараметрыФункции, Истина)));

	ВывестиПустуюСтроку();

	Возврат ИмяПараметра;

КонецФункции

Функция ВывестиЗащищенноеСоединение(СтруктураURL)

	ИмяПараметра = "ЗащищенноеСоединение";
	Если СтруктураURL.Схема = "https" Тогда
		ВывестиСтроку(ИмяПараметра + " = Новый ЗащищенноеСоединениеOpenSSL();");
	Иначе
		ИмяПараметра = "";
	КонецЕсли;

	Возврат ИмяПараметра;

КонецФункции

Функция ВывестиЗаголовки()

	ИмяПараметра = "Заголовки";

	ВывестиСтроку(ИмяПараметра + " = Новый Соответствие();");
	Для Каждого Заголовок Из Заголовки Цикл
		СтрокаЗаголовка = СтрШаблон("%1.Вставить(""%2"", ""%3"");", 
			ИмяПараметра, Заголовок.Ключ, ЭкранироватьКавычки(Заголовок.Значение));
		ВывестиСтроку(СтрокаЗаголовка);
	КонецЦикла;

	ВывестиПустуюСтроку();

	Возврат ИмяПараметра;

КонецФункции

Процедура ВывестиHTTPЗапрос(URL)

	СтруктураURL = Новый ПарсерURL(URL);

	ИмяПараметра = ВывестиЗаголовки();

	ИмяПараметраHTTPСоединение = ВывестиHTTPСоединение(СтруктураURL);
	ИмяПараметраHTTPЗапрос = "HTTPЗапрос";
	ИмяПараметраHTTPОтвет = "HTTPОтвет";
	ИмяВыходногоФайла = "";

	ПараметрыФункции = Новый Массив;
	ПараметрыФункции.Добавить(ОбернутьКавычками(СтруктураURL.ПутьСПараметрами));
	ПараметрыФункции.Добавить(ИмяПараметра);

	ВывестиСтроку(СтрШаблон("HTTPЗапрос = Новый HTTPЗапрос(%1);", ПараметрыФункцииВСтроку(ПараметрыФункции)));

	ПараметрыФункции = Новый Массив;
	ПараметрыФункции.Добавить(ОбернутьКавычками(Метод));
	ПараметрыФункции.Добавить(ИмяПараметраHTTPЗапрос);

	Если ЗначениеЗаполнено(ИмяВыходногоФайла) Тогда
		ПараметрыФункции.Добавить(ИмяВыходногоФайла);
	КонецЕсли;

	ВывестиСтроку(СтрШаблон("%1 = %2.ВызватьHTTPМетод(%3);", 
		ИмяПараметраHTTPОтвет,
		ИмяПараметраHTTPСоединение,
		ПараметрыФункцииВСтроку(ПараметрыФункции)));

	ВывестиПустуюСтроку();

КонецПроцедуры

Процедура ВывестиСтроку(Строка)
	Результат = Результат + Строка + Символы.ПС;
КонецПроцедуры

Процедура ВывестиПустуюСтроку()
	Результат = Результат + Символы.ПС;
КонецПроцедуры

Функция ПараметрыФункцииВСтроку(ПараметрыФункции, ПереноситьКаждыйПараметр = Ложь)
	
	Если ПереноситьКаждыйПараметр Тогда
		Разделитель = "," + Символы.ПС + Символы.Таб;
	Иначе
		Разделитель = ", ";
	КонецЕсли;

	Возврат СокрЛП(СтрСоединить(ПараметрыФункции, Разделитель));

КонецФункции

Функция ОбернутьКавычками(Значение)
	Возврат СтрШаблон("""%1""", ЭкранироватьКавычки(Значение))
КонецФункции

Функция ЭкранироватьКавычки(Строка)
	Возврат СтрЗаменить(Строка, """", """""");
КонецФункции