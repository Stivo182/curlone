#Область ПрограммныйИнтерфейс

Функция ЧтениеТекстовыхФайлов(Файлы, ПрочитанныеФайлы) Экспорт

	Конструктор = Новый КонструкторПрограммногоКода();

	НомерФайла = 1;
	Для Каждого ПередаваемыйФайл Из Файлы Цикл

		Если Не (ПередаваемыйФайл.ПрочитатьСодержимое 
			Или ПередаваемыйФайл.Назначение = НазначенияПередаваемыхДанных.СтрокаЗапроса) Тогда
			Продолжить;
		КонецЕсли;

		Если НомерФайла > 1 Тогда
			Конструктор.ДобавитьПустуюСтроку();
		КонецЕсли;

		Шаблон = "ЧтениеТекста = Новый ЧтениеТекста(%2);
			|%1 = ЧтениеТекста.Прочитать();";

		Если ПередаваемыйФайл.УдалятьПереносыСтрок Тогда
			Шаблон = Шаблон + "
			|%1 = СтрЗаменить(%1, Символы.ПС, """");
			|%1 = СтрЗаменить(%1, Символы.ВК, """");";
		КонецЕсли;

		Если ПередаваемыйФайл.КодироватьСодержимое Тогда
			Шаблон = Шаблон + "
			|%1 = КодироватьСтроку(%1, СпособКодированияСтроки.URLВКодировкеURL);";
		КонецЕсли;

		Если ЗначениеЗаполнено(ПередаваемыйФайл.Ключ) Тогда
			Шаблон = Шаблон + "
			|%1 = """ + ПередаваемыйФайл.Ключ + "="" + %1;";
		КонецЕсли;

		ИмяПеременной = "ТекстовыеДанныеФайла_" + Формат(НомерФайла, "ЧГ=");

		Конструктор.ДобавитьСтроку(Шаблон,
			ИмяПеременной,
			Конструктор.ПараметрВСтроку(ПередаваемыйФайл.ИмяФайла));

		ПрочитанныйФайл = Новый Структура();
		ПрочитанныйФайл.Вставить("ПередаваемыйФайл", ПередаваемыйФайл);
		ПрочитанныйФайл.Вставить("ИмяПеременной", ИмяПеременной);

		ПрочитанныеФайлы.Добавить(ПрочитанныйФайл);

		НомерФайла = НомерФайла + 1;
	КонецЦикла;

	Возврат Конструктор.ПолучитьРезультат();

КонецФункции

Функция СборкаТелаЗапроса(ТекстовыеДанные, ПрочитанныеФайлы) Экспорт

	Конструктор = Новый КонструкторПрограммногоКода();
	ТелоЗапроса = Новый Массив();

	КонкатенацияСПереносомСтрокиИРазделителя = "
	|	+ ""%1"" + %2";
	КонкатенацияСПереносомСтроки = "
	|	+ %1";
	
	НуженРазделитель = Ложь;
	МассивТекстовыхДанных = Новый Массив();
	Для Каждого ПередаваемыйТекст Из ТекстовыеДанные Цикл
		Если Не ПередаваемыйТекст.Назначение = НазначенияПередаваемыхДанных.ТелоЗапроса Тогда
			Продолжить;
		КонецЕсли;

		Разделитель = ПередаваемыйТекст.РазделительТелаЗапроса;
		Если НуженРазделитель И Не ПустаяСтрока(Разделитель) Тогда
			МассивТекстовыхДанных.Добавить(Разделитель);
		КонецЕсли;

		МассивТекстовыхДанных.Добавить(ПередаваемыйТекст.Значение);

		НуженРазделитель = Истина;
	КонецЦикла;

	Если МассивТекстовыхДанных.Количество() Тогда
		ТелоЗапроса.Добавить(Конструктор.ПараметрВСтроку(СтрСоединить(МассивТекстовыхДанных)));
	КонецЕсли;

	Для Каждого ПрочитанныйФайл Из ПрочитанныеФайлы Цикл

		ПередаваемыйФайл = ПрочитанныйФайл.ПередаваемыйФайл;

		Если Не ПередаваемыйФайл.Назначение = НазначенияПередаваемыхДанных.ТелоЗапроса Тогда
			Продолжить;
		КонецЕсли;

		Разделитель = ПередаваемыйФайл.РазделительТелаЗапроса;
		Если НуженРазделитель Тогда
			
			Если Не ПустаяСтрока(Разделитель) Тогда	

				Текст = СтрШаблон(КонкатенацияСПереносомСтрокиИРазделителя, 
					ПередаваемыйФайл.РазделительТелаЗапроса,
					ПрочитанныйФайл.ИмяПеременной);

				ТелоЗапроса.Добавить(Текст);

			Иначе

				Текст = СтрШаблон(КонкатенацияСПереносомСтроки, ПрочитанныйФайл.ИмяПеременной);
				ТелоЗапроса.Добавить(Текст);

			КонецЕсли;

		Иначе

			ТелоЗапроса.Добавить(ПрочитанныйФайл.ИмяПеременной);

		КонецЕсли;

		НуженРазделитель = Истина;
	КонецЦикла;

	Возврат СтрСоединить(ТелоЗапроса);

КонецФункции

#КонецОбласти