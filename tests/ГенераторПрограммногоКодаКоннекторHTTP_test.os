#Использовать asserts
#Использовать ".."

&Тест
Процедура ТестДолжен_ПроверитьЗаголовки() Экспорт

	КонсольнаяКоманда = "curl http://example.com \
	|  -H 'accept: text/html' \
	|  -H 'accept-language: ru,en-US;q=0.9,en;q=0.8' \
	|  -H 'user-agent: curl'";

	ПрограммныйКод = "Заголовки = Новый Соответствие();
	|Заголовки.Вставить(""accept"", ""text/html"");
	|Заголовки.Вставить(""accept-language"", ""ru,en-US;q=0.9,en;q=0.8"");
	|Заголовки.Вставить(""user-agent"", ""curl"");
	|
	|ДополнительныеПараметры = Новый Структура();
	|ДополнительныеПараметры.Вставить(""Заголовки"", Заголовки);
	|
	|Результат = КоннекторHTTP.Get(""http://example.com"", , ДополнительныеПараметры);";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьИнициализациюЗаголовковТолькоОдинРаз() Экспорт

	КонсольнаяКоманда = "curl http://example1.com/page1 http://example2.com/page2 \
	|  -H 'accept: text/html";

	ПрограммныйКод = "Заголовки = Новый Соответствие();
	|Заголовки.Вставить(""accept"", ""text/html"");
	|
	|// Запрос 1. http://example1.com/page1
	|ДополнительныеПараметры = Новый Структура();
	|ДополнительныеПараметры.Вставить(""Заголовки"", Заголовки);
	|
	|Результат = КоннекторHTTP.Get(""http://example1.com/page1"", , ДополнительныеПараметры);
	|
	|// Запрос 2. http://example2.com/page2
	|ДополнительныеПараметры = Новый Структура();
	|ДополнительныеПараметры.Вставить(""Заголовки"", Заголовки);
	|
	|Результат = КоннекторHTTP.Get(""http://example2.com/page2"", , ДополнительныеПараметры);";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьПередачуМетодаPOST() Экспорт

	КонсольнаяКоманда = "curl http://example.com -X POST";

	ПрограммныйКод = "Результат = КоннекторHTTP.Post(""http://example.com"");";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьПередачуПользователя() Экспорт

	КонсольнаяКоманда = "curl http://example.com -u user:secret";

	ПрограммныйКод = "Аутентификация = КоннекторHTTP.НоваяАутентификацияBasic(""user"", ""secret"");
	|
	|ДополнительныеПараметры = Новый Структура();
	|ДополнительныеПараметры.Вставить(""Аутентификация"", Аутентификация);
	|
	|Результат = КоннекторHTTP.Get(""http://example.com"", , ДополнительныеПараметры);";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьПередачуТекстовыхДанныхИзАргументовИФайлов() Экспорт

	КонсольнаяКоманда = "curl http://example.com \
	|	-d param1=value1 \
	|	--data-ascii 'парам2=значение2' \
	|	--data 'param3=value3' \
	|	--data @path-to-file1 \
	|	--data @path-to-file2 \
	|	--data-raw '@at@at@' \
	|	--data-binary @path-to-file3 \
	|	--data-binary 'param4=value4'";

	ПрограммныйКод = "ЧтениеТекста = Новый ЧтениеТекста(""path-to-file1"");
	|ТекстовыеДанныеФайла_1 = ЧтениеТекста.Прочитать();
	|ТекстовыеДанныеФайла_1 = СтрЗаменить(ТекстовыеДанныеФайла_1, Символы.ПС, """");
	|ТекстовыеДанныеФайла_1 = СтрЗаменить(ТекстовыеДанныеФайла_1, Символы.ВК, """");
	|
	|ЧтениеТекста = Новый ЧтениеТекста(""path-to-file2"");
	|ТекстовыеДанныеФайла_2 = ЧтениеТекста.Прочитать();
	|ТекстовыеДанныеФайла_2 = СтрЗаменить(ТекстовыеДанныеФайла_2, Символы.ПС, """");
	|ТекстовыеДанныеФайла_2 = СтрЗаменить(ТекстовыеДанныеФайла_2, Символы.ВК, """");
	|
	|ЧтениеТекста = Новый ЧтениеТекста(""path-to-file3"");
	|ТекстовыеДанныеФайла_3 = ЧтениеТекста.Прочитать();
	|
	|Данные = ""param1=value1&парам2=значение2&param3=value3&@at@at@&param4=value4""
	|	+ ""&"" + ТекстовыеДанныеФайла_1
	|	+ ""&"" + ТекстовыеДанныеФайла_2
	|	+ ""&"" + ТекстовыеДанныеФайла_3;
	|
	|Результат = КоннекторHTTP.Post(""http://example.com"", Данные);";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьИнициализациюТелаЗапросаТолькоОдинРаз() Экспорт

	КонсольнаяКоманда = "curl http://example1.com http://example2.com \
	|	-d param=value \
	|	--data @path-to-file";

	ПрограммныйКод = "ЧтениеТекста = Новый ЧтениеТекста(""path-to-file"");
	|ТекстовыеДанныеФайла_1 = ЧтениеТекста.Прочитать();
	|ТекстовыеДанныеФайла_1 = СтрЗаменить(ТекстовыеДанныеФайла_1, Символы.ПС, """");
	|ТекстовыеДанныеФайла_1 = СтрЗаменить(ТекстовыеДанныеФайла_1, Символы.ВК, """");
	|
	|Данные = ""param=value""
	|	+ ""&"" + ТекстовыеДанныеФайла_1;
	|
	|// Запрос 1. http://example1.com
	|Результат = КоннекторHTTP.Post(""http://example1.com"", Данные);
	|
	|// Запрос 2. http://example2.com
	|Результат = КоннекторHTTP.Post(""http://example2.com"", Данные);";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьПередачуОдногоФайлаИзDataBinary() Экспорт

	КонсольнаяКоманда = "curl http://example.com --data-binary @path-to-file1";

	ПрограммныйКод = "ЧтениеТекста = Новый ЧтениеТекста(""path-to-file1"");
	|ТекстовыеДанныеФайла_1 = ЧтениеТекста.Прочитать();
	|
	|Результат = КоннекторHTTP.Post(""http://example.com"", ТекстовыеДанныеФайла_1);";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьПередачуДвухФайловИзDataBinary() Экспорт

	КонсольнаяКоманда = "curl http://example.com \
	|	--data-binary @path-to-file1 \
	|	--data-binary @path-to-file2";

	ПрограммныйКод = "ЧтениеТекста = Новый ЧтениеТекста(""path-to-file1"");
	|ТекстовыеДанныеФайла_1 = ЧтениеТекста.Прочитать();
	|
	|ЧтениеТекста = Новый ЧтениеТекста(""path-to-file2"");
	|ТекстовыеДанныеФайла_2 = ЧтениеТекста.Прочитать();
	|
	|Данные = ТекстовыеДанныеФайла_1
 	|	+ ""&"" + ТекстовыеДанныеФайла_2;
	|
	|Результат = КоннекторHTTP.Post(""http://example.com"", Данные);";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьПередачуФайла() Экспорт

	КонсольнаяКоманда = "curl --upload-file path/to/file.txt http://example.com";

	ПрограммныйКод = "Данные = Новый ДвоичныеДанные(""path/to/file.txt"");
	|Результат = КоннекторHTTP.Put(""http://example.com/file.txt"", Данные);";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьПередачуНесколькихФайловПоОдномуURL() Экспорт

	КонсольнаяКоманда = "curl --upload-file {path/to/file1.txt,path/to/file2.txt} http://example.com";

	ПрограммныйКод = "// Передача файла 1. path/to/file1.txt
	|Данные = Новый ДвоичныеДанные(""path/to/file1.txt"");
	|Результат = КоннекторHTTP.Put(""http://example.com/file1.txt"", Данные);
	|
	|// Передача файла 2. path/to/file2.txt
	|Данные = Новый ДвоичныеДанные(""path/to/file2.txt"");
	|Результат = КоннекторHTTP.Put(""http://example.com/file2.txt"", Данные);";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьИгнорированиеПередаваемыхФайловПриПревышенииКоличестваURL() Экспорт

	КонсольнаяКоманда = "curl \
	|	-T path/to/file1.txt \
	|	-T path/to/file2.txt \
	|	-T path/to/file3.txt \
	|	-T path/to/file4.txt \
	|	http://example1.com http://example2.com";

	ПрограммныйКод = "// Запрос 1. http://example1.com
	|Данные = Новый ДвоичныеДанные(""path/to/file1.txt"");
	|Результат = КоннекторHTTP.Put(""http://example1.com/file1.txt"", Данные);
	|
	|// Запрос 2. http://example2.com
	|Данные = Новый ДвоичныеДанные(""path/to/file2.txt"");
	|Результат = КоннекторHTTP.Put(""http://example2.com/file2.txt"", Данные);";

	Ошибки = Неопределено;

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP(), Ошибки);

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	Ожидаем.Что(Ошибки).Заполнено();
	Ожидаем.Что(Ошибки[0].Текст).Равно("Файл 'path/to/file3.txt' опции -T, --upload-file было проигнорировано");
	Ожидаем.Что(Ошибки[0].Критичная).ЭтоЛожь();
	Ожидаем.Что(Ошибки[1].Текст).Равно("Файл 'path/to/file4.txt' опции -T, --upload-file было проигнорировано");
	Ожидаем.Что(Ошибки[1].Критичная).ЭтоЛожь();

КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьИспользованиеМетодаPUTиGETДляРазныхURL() Экспорт

	КонсольнаяКоманда = "curl --upload-file path/to/file.txt http://example1.com http://example2.com";

	ПрограммныйКод = "// Запрос 1. http://example1.com
	|Данные = Новый ДвоичныеДанные(""path/to/file.txt"");
	|Результат = КоннекторHTTP.Put(""http://example1.com/file.txt"", Данные);
	|
	|// Запрос 2. http://example2.com
	|Результат = КоннекторHTTP.Get(""http://example2.com"");";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьПередачуТекстовыхДанныхСКодированием() Экспорт

	КонсольнаяКоманда = "curl http://example.com \
	|	--data-urlencode name=val \
	|	--data-urlencode '=encodethis&' \
	|	--data-urlencode name@file \
	|	--data-urlencode @fileonly";

	ПрограммныйКод = "ЧтениеТекста = Новый ЧтениеТекста(""file"");
	|ТекстовыеДанныеФайла_1 = ЧтениеТекста.Прочитать();
	|ТекстовыеДанныеФайла_1 = КодироватьСтроку(ТекстовыеДанныеФайла_1, СпособКодированияСтроки.URLВКодировкеURL);
	|ТекстовыеДанныеФайла_1 = ""name="" + ТекстовыеДанныеФайла_1;
	|
	|ЧтениеТекста = Новый ЧтениеТекста(""fileonly"");
	|ТекстовыеДанныеФайла_2 = ЧтениеТекста.Прочитать();
	|ТекстовыеДанныеФайла_2 = КодироватьСтроку(ТекстовыеДанныеФайла_2, СпособКодированияСтроки.URLВКодировкеURL);
	|
	|Данные = ""name=val&encodethis%26""
	|	+ ""&"" + ТекстовыеДанныеФайла_1
	|	+ ""&"" + ТекстовыеДанныеФайла_2;
	|
	|Результат = КоннекторHTTP.Post(""http://example.com"", Данные);";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьМножественноеИспользованиеUrl() Экспорт

	КонсольнаяКоманда = "curl http://example1.com \
	|	http://example2.com \
	|	--url http://example3.com \
	|	--url http://example4.com";

	ПрограммныйКод = "// Запрос 1. http://example1.com
	|Результат = КоннекторHTTP.Get(""http://example1.com"");
	|
	|// Запрос 2. http://example2.com
	|Результат = КоннекторHTTP.Get(""http://example2.com"");
	|
	|// Запрос 3. http://example3.com
	|Результат = КоннекторHTTP.Get(""http://example3.com"");
	|
	|// Запрос 4. http://example4.com
	|Результат = КоннекторHTTP.Get(""http://example4.com"");";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьПередачуДанныхВСтрокуЗапроса() Экспорт

	КонсольнаяКоманда = "curl http://example.com \
	|	--get \
	|	-d 'param1=value' \
	|	--data 'param2=value2' \
	|	--data @path-to-file";

	ПрограммныйКод = "ЧтениеТекста = Новый ЧтениеТекста(""path-to-file"");
	|ТекстовыеДанныеФайла_1 = ЧтениеТекста.Прочитать();
	|ТекстовыеДанныеФайла_1 = СтрЗаменить(ТекстовыеДанныеФайла_1, Символы.ПС, """");
	|ТекстовыеДанныеФайла_1 = СтрЗаменить(ТекстовыеДанныеФайла_1, Символы.ВК, """");
	|
	|Результат = КоннекторHTTP.Get(""http://example.com?param1=value&param2=value2&"" + ТекстовыеДанныеФайла_1);";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьПередачуДанныхВСтрокуЗапросаИзФайла() Экспорт

	КонсольнаяКоманда = "curl http://example.com \
	|	--get \
	|	--data @path-to-file";

	ПрограммныйКод = "ЧтениеТекста = Новый ЧтениеТекста(""path-to-file"");
	|ТекстовыеДанныеФайла_1 = ЧтениеТекста.Прочитать();
	|ТекстовыеДанныеФайла_1 = СтрЗаменить(ТекстовыеДанныеФайла_1, Символы.ПС, """");
	|ТекстовыеДанныеФайла_1 = СтрЗаменить(ТекстовыеДанныеФайла_1, Символы.ВК, """");
	|
	|Результат = КоннекторHTTP.Get(""http://example.com?"" + ТекстовыеДанныеФайла_1);";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьВставкуДанныхВСтрокуЗапроса() Экспорт

	КонсольнаяКоманда = "curl 'http://example.com?param3=value3#page-1' \
	|	--get \
	|	-d 'param1=value' \
	|	--data 'param2=value2' \
	|	--data @path-to-file";

	ПрограммныйКод = "ЧтениеТекста = Новый ЧтениеТекста(""path-to-file"");
	|ТекстовыеДанныеФайла_1 = ЧтениеТекста.Прочитать();
	|ТекстовыеДанныеФайла_1 = СтрЗаменить(ТекстовыеДанныеФайла_1, Символы.ПС, """");
	|ТекстовыеДанныеФайла_1 = СтрЗаменить(ТекстовыеДанныеФайла_1, Символы.ВК, """");
	|
	|URL = ""http://example.com?param3=value3&param1=value&param2=value2""
	|	+ ""&"" + ТекстовыеДанныеФайла_1
	|	+ ""#page-1"";
	|
	|Результат = КоннекторHTTP.Get(URL);";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьHTTPМетодHEAD() Экспорт

	КонсольнаяКоманда = "
	|curl http://example1.com --head
	|curl http://example2.com -X HEAD";

	ПрограммныйКод = "////////////////////////////////////////////// 
	|// Команда #1.
	|
	|Результат = КоннекторHTTP.Head(""http://example1.com"");
	|
	|////////////////////////////////////////////// 
	|// Команда #2.
	|
	|Результат = КоннекторHTTP.Head(""http://example2.com"");";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьHTTPМетодOPTIONS() Экспорт

	КонсольнаяКоманда = "curl http://example.com -X OPTIONS";

	ПрограммныйКод = "Результат = КоннекторHTTP.Options(""http://example.com"");";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьОбработкуНесколькихКоманд() Экспорт

	КонсольнаяКоманда = "curl http://example1.com & curl http://example2.com";

	ПрограммныйКод = "////////////////////////////////////////////// 
	|// Команда #1.
	|
	|Результат = КоннекторHTTP.Get(""http://example1.com"");
	|
	|////////////////////////////////////////////// 
	|// Команда #2.
	|
	|Результат = КоннекторHTTP.Get(""http://example2.com"");";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьОтсутствиеИспользованияЗащищенногоСоединения() Экспорт

	КонсольнаяКоманда = "curl 'http://example.com'";

	ПрограммныйКод = "Результат = КоннекторHTTP.Get(""http://example.com"");";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьИспользованиеСертификатаКлиентаСПаролем() Экспорт

	КонсольнаяКоманда = "curl 'https://example.com' -E certfile.pem:secret";

	ПрограммныйКод = "ДополнительныеПараметры = Новый Структура();
	|ДополнительныеПараметры.Вставить(""КлиентскийСертификатSSL"", Новый СертификатКлиентаФайл(""certfile.pem"", ""secret""));
	|
	|Результат = КоннекторHTTP.Get(""https://example.com"", , ДополнительныеПараметры);";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьИспользованиеСертификатаКлиентаБезПароля() Экспорт

	КонсольнаяКоманда = "curl 'https://example.com' --cert certfile.pem";

	ПрограммныйКод = "ДополнительныеПараметры = Новый Структура();
	|ДополнительныеПараметры.Вставить(""КлиентскийСертификатSSL"", Новый СертификатКлиентаФайл(""certfile.pem""));
	|
	|Результат = КоннекторHTTP.Get(""https://example.com"", , ДополнительныеПараметры);";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьИспользованиеСертификатаКлиентаИСертификатыУЦИзФайла() Экспорт

	КонсольнаяКоманда = "curl 'https://example.com' --cert certfile.pem --cacert CA-file.txt";

	ПрограммныйКод = "ДополнительныеПараметры = Новый Структура();
	|ДополнительныеПараметры.Вставить(""ПроверятьSSL"", Новый СертификатыУдостоверяющихЦентровФайл(""CA-file.txt""));
	|ДополнительныеПараметры.Вставить(""КлиентскийСертификатSSL"", Новый СертификатКлиентаФайл(""certfile.pem""));
	|
	|Результат = КоннекторHTTP.Get(""https://example.com"", , ДополнительныеПараметры);";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьПередачуПараметровЗапроса() Экспорт

	КонсольнаяКоманда = "curl http://example.com \
	|	--url-query name=val \
	|	--url-query =encodethis& \
	|	--url-query name@file \
	|	--url-query @fileonly \
	|	--url-query '+name=%20foo' \
	|	--url-query +@not-a-file";

	ПрограммныйКод = "ЧтениеТекста = Новый ЧтениеТекста(""file"");
	|ТекстовыеДанныеФайла_1 = ЧтениеТекста.Прочитать();
	|ТекстовыеДанныеФайла_1 = КодироватьСтроку(ТекстовыеДанныеФайла_1, СпособКодированияСтроки.URLВКодировкеURL);
	|ТекстовыеДанныеФайла_1 = ""name="" + ТекстовыеДанныеФайла_1;
	|
	|ЧтениеТекста = Новый ЧтениеТекста(""fileonly"");
	|ТекстовыеДанныеФайла_2 = ЧтениеТекста.Прочитать();
	|ТекстовыеДанныеФайла_2 = КодироватьСтроку(ТекстовыеДанныеФайла_2, СпособКодированияСтроки.URLВКодировкеURL);
	|
	|URL = ""http://example.com?name=val&encodethis%26&name=%20foo&@not-a-file""
	|	+ ""&"" + ТекстовыеДанныеФайла_1
	|	+ ""&"" + ТекстовыеДанныеФайла_2;
	|
	|Результат = КоннекторHTTP.Get(URL);";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьПередачуПараметровЗапросаТолькоИзФайла() Экспорт

	КонсольнаяКоманда = "curl http://example.com --url-query @fileonly";

	ПрограммныйКод = "ЧтениеТекста = Новый ЧтениеТекста(""fileonly"");
	|ТекстовыеДанныеФайла_1 = ЧтениеТекста.Прочитать();
	|ТекстовыеДанныеФайла_1 = КодироватьСтроку(ТекстовыеДанныеФайла_1, СпособКодированияСтроки.URLВКодировкеURL);
	|
	|Результат = КоннекторHTTP.Get(""http://example.com?"" + ТекстовыеДанныеФайла_1);";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьПередачуПараметровЗапросаИФайла() Экспорт

	КонсольнаяКоманда = "curl http://example.com \
	|	--url-query name=val \
	|	--data @path-to-file";

	ПрограммныйКод = "ЧтениеТекста = Новый ЧтениеТекста(""path-to-file"");
	|ТекстовыеДанныеФайла_1 = ЧтениеТекста.Прочитать();
	|ТекстовыеДанныеФайла_1 = СтрЗаменить(ТекстовыеДанныеФайла_1, Символы.ПС, """");
	|ТекстовыеДанныеФайла_1 = СтрЗаменить(ТекстовыеДанныеФайла_1, Символы.ВК, """");
	|
	|ПараметрыЗапроса = Новый Соответствие();
	|ПараметрыЗапроса.Вставить(""name"", ""val"");
	|
	|ДополнительныеПараметры = Новый Структура();
	|ДополнительныеПараметры.Вставить(""ПараметрыЗапроса"", ПараметрыЗапроса);
	|
	|Результат = КоннекторHTTP.Post(""http://example.com"", ТекстовыеДанныеФайла_1, ДополнительныеПараметры);";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьПрокси() Экспорт

	КонсольнаяКоманда = "curl http://example.com --proxy http://proxy.example:1088";

	ПрограммныйКод = "Прокси = Новый ИнтернетПрокси();
	|Прокси.Установить(""http"", ""proxy.example"", 1088, , , Ложь);
	|
	|ДополнительныеПараметры = Новый Структура();
	|ДополнительныеПараметры.Вставить(""Прокси"", Прокси);
	|
	|Результат = КоннекторHTTP.Get(""http://example.com"", , ДополнительныеПараметры);";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьИнициализациюПроксиТолькоОдинРаз() Экспорт

	КонсольнаяКоманда = "curl http://example1.com http://example2.com --proxy http://proxy.example:1088";

	ПрограммныйКод = "Прокси = Новый ИнтернетПрокси();
	|Прокси.Установить(""http"", ""proxy.example"", 1088, , , Ложь);
	|
	|// Запрос 1. http://example1.com
	|ДополнительныеПараметры = Новый Структура();
	|ДополнительныеПараметры.Вставить(""Прокси"", Прокси);
	|
	|Результат = КоннекторHTTP.Get(""http://example1.com"", , ДополнительныеПараметры);
	|
	|// Запрос 2. http://example2.com
	|ДополнительныеПараметры = Новый Структура();
	|ДополнительныеПараметры.Вставить(""Прокси"", Прокси);
	|
	|Результат = КоннекторHTTP.Get(""http://example2.com"", , ДополнительныеПараметры);";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьАутентификациюПроксиBasic() Экспорт

	КонсольнаяКоманда = "curl http://example.com \
	|	--proxy http://proxy.example \
	|	--proxy-user user:secret";

	ПрограммныйКод = "Прокси = Новый ИнтернетПрокси();
	|Прокси.Установить(""http"", ""proxy.example"", 1080, ""user"", ""secret"", Ложь);
	|
	|ДополнительныеПараметры = Новый Структура();
	|ДополнительныеПараметры.Вставить(""Прокси"", Прокси);
	|
	|Результат = КоннекторHTTP.Get(""http://example.com"", , ДополнительныеПараметры);";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьАутентификациюПроксиNTLM() Экспорт

	КонсольнаяКоманда = "curl http://example.com \
	|	--proxy http://proxy.example \
	|   --proxy-ntlm";

	ПрограммныйКод = "Прокси = Новый ИнтернетПрокси();
	|Прокси.Установить(""http"", ""proxy.example"", 1080);
	|
	|ДополнительныеПараметры = Новый Структура();
	|ДополнительныеПараметры.Вставить(""Прокси"", Прокси);
	|
	|Результат = КоннекторHTTP.Get(""http://example.com"", , ДополнительныеПараметры);";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьОшибкуПроксиПротоколНеПоддерживается() Экспорт

	КонсольнаяКоманда = "curl http://example.com/ --proxy socks5h://proxy.example";

	Ошибки = Неопределено;

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, 
		Новый ГенераторПрограммногоКодаКоннекторHTTP(), 
		Ошибки);

	Ожидаем.Что(Результат).Не_().Заполнено();
	Ожидаем.Что(Ошибки).Заполнено();
	Ожидаем.Что(Ошибки[0].Текст).Равно("Прокси протокол socks5h не поддерживается");
	Ожидаем.Что(Ошибки[0].Критичная).ЭтоИстина(); 
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьТаймаут() Экспорт

	КонсольнаяКоманда = "curl http://example.com/ --max-time 20 --connect-timeout 5.5";

	ПрограммныйКод = "ДополнительныеПараметры = Новый Структура();
	|ДополнительныеПараметры.Вставить(""Таймаут"", 25.5);
	|
	|Результат = КоннекторHTTP.Get(""http://example.com"", , ДополнительныеПараметры);";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьОтсутствиеТаймаутаЕслиНеУстановленыОбаТаймаута() Экспорт

	КонсольнаяКоманда = "curl http://example.com/ --max-time 20 --connect-timeout 0";

	ПрограммныйКод = "Результат = КоннекторHTTP.Get(""http://example.com"");";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьПередачуJsonИзФайлов() Экспорт

	КонсольнаяКоманда = "curl 'http://example.com' --json @path-to-file1 --json @path-to-file2";

	ПрограммныйКод = "Заголовки = Новый Соответствие();
	|Заголовки.Вставить(""Content-Type"", ""application/json"");
	|Заголовки.Вставить(""Accept"", ""application/json"");
	|
	|ЧтениеТекста = Новый ЧтениеТекста(""path-to-file1"");
	|ТекстовыеДанныеФайла_1 = ЧтениеТекста.Прочитать();
	|
	|ЧтениеТекста = Новый ЧтениеТекста(""path-to-file2"");
	|ТекстовыеДанныеФайла_2 = ЧтениеТекста.Прочитать();
	|
	|Данные = ТекстовыеДанныеФайла_1
 	|	+ ТекстовыеДанныеФайла_2;
	|
	|ДополнительныеПараметры = Новый Структура();
	|ДополнительныеПараметры.Вставить(""Заголовки"", Заголовки);
	|
	|Результат = КоннекторHTTP.Post(""http://example.com"", Данные, ДополнительныеПараметры);";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьПередачуJsonИзСтроки() Экспорт

	КонсольнаяКоманда = "curl 'http://example.com' --json '{""drink"": ""coffe""}'";

	ПрограммныйКод = "Заголовки = Новый Соответствие();
	|Заголовки.Вставить(""Content-Type"", ""application/json"");
	|Заголовки.Вставить(""Accept"", ""application/json"");
	|
	|ДополнительныеПараметры = Новый Структура();
	|ДополнительныеПараметры.Вставить(""Заголовки"", Заголовки);
	|
	|Результат = КоннекторHTTP.Post(""http://example.com"", ""{""""drink"""": """"coffe""""}"", ДополнительныеПараметры);";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьПередачуJsonИзНесколькихСтрок() Экспорт

	КонсольнаяКоманда = "curl 'http://example.com' \
	|	--json '{""drink"":' \
	|	--json ' ""coffe""}'";

	ПрограммныйКод = "Заголовки = Новый Соответствие();
	|Заголовки.Вставить(""Content-Type"", ""application/json"");
	|Заголовки.Вставить(""Accept"", ""application/json"");
	|
	|ДополнительныеПараметры = Новый Структура();
	|ДополнительныеПараметры.Вставить(""Заголовки"", Заголовки);
	|
	|Результат = КоннекторHTTP.Post(""http://example.com"", ""{""""drink"""": """"coffe""""}"", ДополнительныеПараметры);";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьПередачуJsonИзСтрокиИФайла() Экспорт

	КонсольнаяКоманда = "curl 'http://example.com' \
	|	--json '{""drink"": ""coffe"", ""size"": ' \
	|	--json @path-to-file";

	ПрограммныйКод = "Заголовки = Новый Соответствие();
	|Заголовки.Вставить(""Content-Type"", ""application/json"");
	|Заголовки.Вставить(""Accept"", ""application/json"");
	|
	|ЧтениеТекста = Новый ЧтениеТекста(""path-to-file"");
	|ТекстовыеДанныеФайла_1 = ЧтениеТекста.Прочитать();
	|
	|Данные = ""{""""drink"""": """"coffe"""", """"size"""": ""
	|	+ ТекстовыеДанныеФайла_1;
	|
	|ДополнительныеПараметры = Новый Структура();
	|ДополнительныеПараметры.Вставить(""Заголовки"", Заголовки);
	|
	|Результат = КоннекторHTTP.Post(""http://example.com"", Данные, ДополнительныеПараметры);";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьUserAgent() Экспорт

	КонсольнаяКоманда = "curl http://example.com/ -A 'Agent 007'";

	ПрограммныйКод = "Заголовки = Новый Соответствие();
	|Заголовки.Вставить(""User-Agent"", ""Agent 007"");
	|
	|ДополнительныеПараметры = Новый Структура();
	|ДополнительныеПараметры.Вставить(""Заголовки"", Заголовки);
	|
	|Результат = КоннекторHTTP.Get(""http://example.com"", , ДополнительныеПараметры);";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьПробелыВUserAgent() Экспорт

	КонсольнаяКоманда = "curl http://example.com/ -A ' '";

	ПрограммныйКод = "Заголовки = Новый Соответствие();
	|Заголовки.Вставить(""User-Agent"", """");
	|
	|ДополнительныеПараметры = Новый Структура();
	|ДополнительныеПараметры.Вставить(""Заголовки"", Заголовки);
	|
	|Результат = КоннекторHTTP.Get(""http://example.com"", , ДополнительныеПараметры);";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьПустойUserAgent() Экспорт

	КонсольнаяКоманда = "curl http://example.com/ -A ''";

	ПрограммныйКод = "Результат = КоннекторHTTP.Get(""http://example.com"");";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьОтсутстивиеЗамещенияUserAgent() Экспорт

	КонсольнаяКоманда = "curl http://example.com/ -H 'User-Agent: Agent 007' -A 'Agent 001'";

	ПрограммныйКод = "Заголовки = Новый Соответствие();
	|Заголовки.Вставить(""User-Agent"", ""Agent 007"");
	|
	|ДополнительныеПараметры = Новый Структура();
	|ДополнительныеПараметры.Вставить(""Заголовки"", Заголовки);
	|
	|Результат = КоннекторHTTP.Get(""http://example.com"", , ДополнительныеПараметры);";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьИспользованиеОпцийТолькоСвоейКоманды() Экспорт

	КонсольнаяКоманда = "curl http://example1.com -H 'accept: text/html'
	|curl http://example2.com -d 'key=value'
	|curl http://example3.com";

	ПрограммныйКод = "////////////////////////////////////////////// 
	|// Команда #1.
	|
	|Заголовки = Новый Соответствие();
	|Заголовки.Вставить(""accept"", ""text/html"");
	|
	|ДополнительныеПараметры = Новый Структура();
	|ДополнительныеПараметры.Вставить(""Заголовки"", Заголовки);
	|
	|Результат = КоннекторHTTP.Get(""http://example1.com"", , ДополнительныеПараметры);
	|
	|////////////////////////////////////////////// 
	|// Команда #2.
	|
	|Данные = Новый Соответствие();
	|Данные.Вставить(""key"", ""value"");
	|
	|Результат = КоннекторHTTP.Post(""http://example2.com"", Данные);
	|
	|////////////////////////////////////////////// 
	|// Команда #3.
	|
	|Результат = КоннекторHTTP.Get(""http://example3.com"");";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьBearerToken() Экспорт

	КонсольнаяКоманда = "curl http://example.com/ --oauth2-bearer 'mF_9.B5f-4.1JqM'";

	ПрограммныйКод = "Аутентификация = КоннекторHTTP.НоваяАутентификацияBearer(""mF_9.B5f-4.1JqM"");
	|
	|ДополнительныеПараметры = Новый Структура();
	|ДополнительныеПараметры.Вставить(""Аутентификация"", Аутентификация);
	|
	|Результат = КоннекторHTTP.Get(""http://example.com"", , ДополнительныеПараметры);";

	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();
	Результат = КонвертерКомандыCURL.Конвертировать(КонсольнаяКоманда, Новый ГенераторПрограммногоКодаКоннекторHTTP());

	Ожидаем.Что(Результат).Равно(ПрограммныйКод);
	
КонецПроцедуры